services:
  micro-postgres:
    image: postgres
    container_name: micro-postgres
    hostname: micro-postgres
    networks:
      - micro-net
    ports:
      - "5490:5432"
    volumes:
      - micro-postgres-volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${PGPASSWORD:?database password not set}
    deploy:
      restart_policy:
        condition: on-failure
  micro-zookeeper:
    image: confluentinc/cp-zookeeper:7.6.2
    hostname: micro-zookeeper
    container_name: micro-zookeeper
    ports:
      - "2190:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2190
    networks:
      - micro-net
  micro-kafka:
    image: confluentinc/cp-kafka:7.6.2
    hostname: micro-kafka
    container_name: micro-kafka
    ports:
      - "9090:9092"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=micro-zookeeper:2190
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://micro-kafka:9090
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      # - KAFKA_BROKER_ID=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
    networks:
      - micro-net
    depends_on:
      - micro-zookeeper
  micro-server:
    depends_on:
      - micro-postgres
      - micro-kafka
    build:
      context: .
    container_name: micro-server
    hostname: micro-server
    networks:
      - micro-net
    ports:
      - "8090:8090"
    volumes:
      - micro-server-volume:/app
    environment:
      - PGUSER=${PGUSER:-postgres}
      - PGPASSWORD=${PGPASSWORD:?database password not set}
      - PGHOST=${PGHOST:-micro-postgres}
      - PGPORT=${PGPORT:-5490}
      - PGDATABASE=${PGDATABASE:-postgres}
      - PGSSLMODE=${PGSSLMODE:-disable}
      - BOOTSTRAP_SERVERS=${BOOTSTRAP_SERVERS:-micro-kafka:9090}
      - MICRO_SERVER_PORT=${MICRO_SERVER_PORT:-8090}
    deploy:
      restart_policy:
        condition: on-failure
  micro-consumer:
    build: 
      context: internal/consumer
    container_name: micro-consumer
    hostname: micro-consumer
    networks:
      - micro-net
    volumes:
      - micro-consumer-volume:/app
    environment:
      - BOOTSTRAP_SERVERS=${BOOTSTRAP_SERVERS:-micro-kafka:9090}
    deploy:
      restart_policy:
        condition: on-failure


volumes:
  micro-consumer-volume:
  micro-server-volume:
  micro-postgres-volume:

networks:
  micro-net:
    driver: bridge